name: Test Python
on: [push]
env:
  PYTHON_VERSION: 3.9.7
jobs:
  Create-Interpreters:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, ubuntu-20.04]

    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Cache interpreters
        uses: actions/cache@v2
        id: cache
        with:
          path: python-${{ env.PYTHON_VERSION }}-${{ runner.os }}.tar
          key: interpreters-${{ env.PYTHON_VERSION }}-${{ runner.os }}-${{ secrets.CACHE_VERSION }}

      - name: Check out repository code
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2

      - name: Create interpreters
        if: steps.cache.outputs.cache-hit != 'true'
        run: python create_embedded_python.py -v ${{ env.PYTHON_VERSION }} .

      - name: Tar interpreters
        if: steps.cache.outputs.cache-hit != 'true'
        run: tar cvf python-${{ env.PYTHON_VERSION }}-${{ runner.os }}.tar python-*-embed-*

  Build-Binaries:
    needs: Create-Interpreters
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
#        os: [windows-2019, ubuntu-20.04]
#        os: [ubuntu-20.04]
        chunks: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
        include:
          - os: windows-2019
            docker: docker build -f Dockerfile.windows -t piptester -m 4GB --build-arg BASE_IMAGE=mcr.microsoft.com/windows/servercore:ltsc2019 .
#          - os: ubuntu-20.04
#            docker: docker build -f Dockerfile.linux -t piptester .

    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Fix cache permissions
        if: runner.os == 'Linux'
        run: sudo chown root:root cache

      - name: Load interpreters from cache
        uses: actions/cache@v2
        id: cache
        with:
          path: python-${{ env.PYTHON_VERSION }}-${{ runner.os }}.tar
          key: interpreters-${{ env.PYTHON_VERSION }}-${{ runner.os }}-${{ secrets.CACHE_VERSION }}

      - name: Untar the interpreter
        run: tar xf ../python-${{ env.PYTHON_VERSION }}-${{ runner.os }}.tar
        working-directory: python

      - name: Install rependencies
        run: python -m pip install -r requirements.txt

      - name: Create Docker container
        run: ${{ matrix.docker }}

      - name: Do installs
        run: python main.py --chunk ${{ matrix.chunks }}

      - uses: actions/upload-artifact@v2
        with:
          name: Results
          path: |
            logs
          if-no-files-found: error
          retention-days: 30
